/**
 * @fileoverview This file is generated by the Angular template compiler.
 * Do not edit.
 * @suppress {suspiciousCode,uselessCode,missingProperties}
 */
/* tslint:disable */
"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var import0 = require("@angular/core");
var import1 = require("../../../../src/core/services/google-maps-api-wrapper");
var import2 = require("../../../../src/core/services/maps-api-loader/maps-api-loader");
var import3 = require("../../../../src/core/directives/map");
var import4 = require("../../../../src/core/services/managers/marker-manager");
var import5 = require("../../../../src/core/services/managers/info-window-manager");
var import6 = require("../../../../src/core/services/managers/circle-manager");
var import7 = require("../../../../src/core/services/managers/polyline-manager");
var import8 = require("../../../../src/core/services/managers/polygon-manager");
var import9 = require("../../../../src/core/services/managers/kml-layer-manager");
var import10 = require("../../../../src/core/services/managers/data-layer-manager");
var styles_AgmMap = ['.agm-map-container-inner[_ngcontent-%COMP%] {\n      width: inherit;\n      height: inherit;\n    }\n    .agm-map-content[_ngcontent-%COMP%] {\n      display:none;\n    }'];
exports.RenderType_AgmMap = import0.ɵcrt({
    encapsulation: 0,
    styles: styles_AgmMap,
    data: {}
});
function View_AgmMap_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵted(null, ['\n    '])),
        (l()(), import0.ɵeld(0, null, null, 0, 'div', [[
                'class',
                'agm-map-container-inner sebm-google-map-container-inner'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵted(null, ['\n    '])),
        (l()(), import0.ɵeld(0, null, null, 3, 'div', [[
                'class',
                'agm-map-content'
            ]
        ], null, null, null, null, null)),
        (l()(), import0.ɵted(null, ['\n      '])),
        import0.ɵncd(null, 0),
        (l()(), import0.ɵted(null, ['\n    '])),
        (l()(), import0.ɵted(null, ['\n  ']))
    ], null, null);
}
exports.View_AgmMap_0 = View_AgmMap_0;
function View_AgmMap_Host_0(l) {
    return import0.ɵvid(0, [
        (l()(), import0.ɵeld(0, null, null, 9, 'agm-map', [], [[
                2,
                'sebm-google-map-container',
                null
            ]
        ], null, null, View_AgmMap_0, exports.RenderType_AgmMap)),
        import0.ɵprd(256, null, import1.GoogleMapsAPIWrapper, import1.GoogleMapsAPIWrapper, [
            import2.MapsAPILoader,
            import0.NgZone
        ]),
        import0.ɵdid(385024, null, 0, import3.AgmMap, [
            import0.ElementRef,
            import1.GoogleMapsAPIWrapper
        ], null, null),
        import0.ɵprd(2304, null, import4.MarkerManager, import4.MarkerManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ]),
        import0.ɵprd(2304, null, import5.InfoWindowManager, import5.InfoWindowManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone,
            import4.MarkerManager
        ]),
        import0.ɵprd(2304, null, import6.CircleManager, import6.CircleManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ]),
        import0.ɵprd(2304, null, import7.PolylineManager, import7.PolylineManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ]),
        import0.ɵprd(2304, null, import8.PolygonManager, import8.PolygonManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ]),
        import0.ɵprd(2304, null, import9.KmlLayerManager, import9.KmlLayerManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ]),
        import0.ɵprd(2304, null, import10.DataLayerManager, import10.DataLayerManager, [
            import1.GoogleMapsAPIWrapper,
            import0.NgZone
        ])
    ], function (ck, v) {
        ck(v, 2, 0);
    }, function (ck, v) {
        var currVal_0 = true;
        ck(v, 0, 0, currVal_0);
    });
}
exports.AgmMapNgFactory = import0.ɵccf('agm-map', import3.AgmMap, View_AgmMap_Host_0, {
    longitude: 'longitude',
    latitude: 'latitude',
    zoom: 'zoom',
    minZoom: 'minZoom',
    maxZoom: 'maxZoom',
    draggable: 'mapDraggable',
    disableDoubleClickZoom: 'disableDoubleClickZoom',
    disableDefaultUI: 'disableDefaultUI',
    scrollwheel: 'scrollwheel',
    backgroundColor: 'backgroundColor',
    draggableCursor: 'draggableCursor',
    draggingCursor: 'draggingCursor',
    keyboardShortcuts: 'keyboardShortcuts',
    zoomControl: 'zoomControl',
    zoomControlOptions: 'zoomControlOptions',
    styles: 'styles',
    usePanning: 'usePanning',
    streetViewControl: 'streetViewControl',
    streetViewControlOptions: 'streetViewControlOptions',
    fitBounds: 'fitBounds',
    scaleControl: 'scaleControl',
    scaleControlOptions: 'scaleControlOptions',
    mapTypeControl: 'mapTypeControl',
    mapTypeControlOptions: 'mapTypeControlOptions',
    panControl: 'panControl',
    panControlOptions: 'panControlOptions',
    rotateControl: 'rotateControl',
    rotateControlOptions: 'rotateControlOptions',
    fullscreenControl: 'fullscreenControl',
    fullscreenControlOptions: 'fullscreenControlOptions',
    mapTypeId: 'mapTypeId',
    clickableIcons: 'clickableIcons',
    gestureHandling: 'gestureHandling'
}, {
    mapClick: 'mapClick',
    mapRightClick: 'mapRightClick',
    mapDblClick: 'mapDblClick',
    centerChange: 'centerChange',
    boundsChange: 'boundsChange',
    idle: 'idle',
    zoomChange: 'zoomChange',
    mapReady: 'mapReady'
}, ['*']);
//# sourceMappingURL=map.ngfactory.js.map